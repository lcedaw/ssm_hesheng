<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lc.meq.dao.SysRolesDao" >

	<!-- <cache type="com.lc.meq.jedis.RedisCache"></cache> -->
	
	<!-- <resultMap type="com.lc.meq.pojo.vo.SysRolesVo" id="sysRolesMap">
		<id property="roleUid" column="role_uid"/>
		<id property="roleName" column="role_name"/>
		<id property="remark" column="remark"/>
		<id property="deactive" column="is_deactive"/>
		<id property="creator" column="creator" />
		<id property="createdDate" column="created_date"/>
		<association property="sysUsers" javaType="SysUsers">
			<id property="userUid" column="user_uid"/>
			<result property="userName" column="user_name"/> 
		</association>
	</resultMap> -->
	
	<select id="queryById" resultType="com.lc.meq.pojo.vo.SysRolesVo">
		SELECT 
			r.role_uid,
			r.role_name,
			r.remark,
			r.is_deactive,
			r.creator,
			r.created_date,
			u.user_name
		FROM
			sys_roles r
		LEFT JOIN 
			sys_users u ON r.creator = u.user_uid	
		WHERE 
			r.role_uid = #{roleUid}::uuid	
	</select>
	
	<!-- <select id="queryById" resultType="SysRoles">
		SELECT 
			role_uid,
			role_name,
			remark,
			is_deactive,
			creator,
			created_date
		FROM
			sys_roles
		WHERE 
			role_uid = #{roleUid}::uuid	
	</select> -->
	
	<update id="updateById" parameterType="SysRoles">
		UPDATE 
			sys_roles
		SET 
			role_name = #{roleName},
			remark = #{remark},
			is_deactive = #{deactive},
			creator = #{creator}::uuid,
			created_date = #{createdDate}
		WHERE
			role_uid = #{roleUid}::uuid
	</update>
</mapper>
